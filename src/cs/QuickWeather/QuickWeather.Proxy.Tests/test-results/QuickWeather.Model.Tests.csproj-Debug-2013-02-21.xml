<?xml version="1.0" encoding="utf-8"?>
<TestRecord xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Results>
    <UnitTestResult>
      <TestDate>2013-02-21T15:46:48</TestDate>
      <Passed>0</Passed>
      <Errors>0</Errors>
      <Failures>0</Failures>
      <Inconclusive>0</Inconclusive>
      <NotRunnable>0</NotRunnable>
      <Skipped>0</Skipped>
      <Ignored>0</Ignored>
      <Time />
      <Message>The type initializer for 'Mono.Unix.Native.Stdlib' threw an exception.</Message>
      <StackTrace>
Server stack trace: 
   at Mono.Unix.Native.Stdlib.malloc(UInt64 size)
   at Mono.Unix.UnixMarshal.StringToHeap(String s, Int32 index, Int32 count, Encoding encoding)
   at Mono.Unix.Catalog.GetString(String s)
   at MonoDevelop.Core.GettextCatalog.GetString(String phrase)
   at MonoDevelop.NUnit.External.EventListenerWrapper.GetLocalTestResult(TestResult t)
   at MonoDevelop.NUnit.External.ExternalTestRunner.Run(IRemoteEventListener listener, ITestFilter filter, String path, String suiteName, List`1 supportAssemblies, String testRunnerType, String testRunnerAssembly)
   at System.Runtime.Remoting.Messaging.StackBuilderSink._PrivateProcessMessage(IntPtr md, Object[] args, Object server, Object[]&amp; outArgs)
   at System.Runtime.Remoting.Messaging.StackBuilderSink.SyncProcessMessage(IMessage msg)

Exception rethrown at [0]: 
   at System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)
   at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData&amp; msgData, Int32 type)
   at MonoDevelop.NUnit.External.ExternalTestRunner.Run(IRemoteEventListener listener, ITestFilter filter, String path, String suiteName, List`1 supportAssemblies, String testRunnerType, String testRunnerAssembly)
   at MonoDevelop.NUnit.NUnitAssemblyTestSuite.RunUnitTest(UnitTest test, String suiteName, String pathName, String testName, TestContext testContext)</StackTrace>
    </UnitTestResult>
  </Results>
  <Tests>
    <TestRecord Name="QuickWeather">
      <Tests>
        <TestRecord Name="Model">
          <Tests>
            <TestRecord Name="Tests">
              <Tests>
                <TestRecord Name="Test">
                  <Tests>
                    <TestRecord Name="TestCase">
                      <Results>
                        <UnitTestResult>
                          <TestDate>2013-02-21T15:46:48</TestDate>
                          <Passed>0</Passed>
                          <Errors>0</Errors>
                          <Failures>0</Failures>
                          <Inconclusive>0</Inconclusive>
                          <NotRunnable>0</NotRunnable>
                          <Skipped>0</Skipped>
                          <Ignored>0</Ignored>
                          <Time />
                          <Message>The type initializer for 'Mono.Unix.Native.Stdlib' threw an exception.</Message>
                          <StackTrace>
Server stack trace: 
   at Mono.Unix.Native.Stdlib.malloc(UInt64 size)
   at Mono.Unix.UnixMarshal.StringToHeap(String s, Int32 index, Int32 count, Encoding encoding)
   at Mono.Unix.Catalog.GetString(String s)
   at MonoDevelop.Core.GettextCatalog.GetString(String phrase)
   at MonoDevelop.NUnit.External.EventListenerWrapper.GetLocalTestResult(TestResult t)
   at MonoDevelop.NUnit.External.ExternalTestRunner.Run(IRemoteEventListener listener, ITestFilter filter, String path, String suiteName, List`1 supportAssemblies, String testRunnerType, String testRunnerAssembly)
   at System.Runtime.Remoting.Messaging.StackBuilderSink._PrivateProcessMessage(IntPtr md, Object[] args, Object server, Object[]&amp; outArgs)
   at System.Runtime.Remoting.Messaging.StackBuilderSink.SyncProcessMessage(IMessage msg)

Exception rethrown at [0]: 
   at System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)
   at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData&amp; msgData, Int32 type)
   at MonoDevelop.NUnit.External.ExternalTestRunner.Run(IRemoteEventListener listener, ITestFilter filter, String path, String suiteName, List`1 supportAssemblies, String testRunnerType, String testRunnerAssembly)
   at MonoDevelop.NUnit.NUnitAssemblyTestSuite.RunUnitTest(UnitTest test, String suiteName, String pathName, String testName, TestContext testContext)</StackTrace>
                        </UnitTestResult>
                      </Results>
                    </TestRecord>
                  </Tests>
                </TestRecord>
              </Tests>
            </TestRecord>
          </Tests>
        </TestRecord>
      </Tests>
    </TestRecord>
  </Tests>
</TestRecord>